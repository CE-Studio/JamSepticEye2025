[gd_resource type="VisualShader" load_steps=26 format=3 uid="uid://cjy6o3jfp7x3v"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0ivc4"]
input_name = "time"

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_ce3b3"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.1, 0.1), 2, Vector2(0, 0)]
op_type = 1

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_o8ygn"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 26

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_resmg"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.533, 0.433)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_auy42"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_sddo7"]
default_input_values = [0, 0.0, 1, -0.3]
operator = 2

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_n7syd"]
operator = 4

[sub_resource type="Gradient" id="Gradient_5t3mb"]
offsets = PackedFloat32Array(0, 0.79746836)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_lv6ql"]
noise_type = 2
frequency = 0.0278
fractal_octaves = 1
domain_warp_enabled = true
domain_warp_frequency = 0.02
domain_warp_fractal_octaves = 1

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ih2pr"]
noise = SubResource("FastNoiseLite_lv6ql")
color_ramp = SubResource("Gradient_5t3mb")
seamless = true

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_dq5hw"]
texture = SubResource("NoiseTexture2D_ih2pr")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_3po8o"]
texture = SubResource("NoiseTexture2D_ih2pr")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_84rs3"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_fpvg5"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.824, 0.54)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_ju1iq"]
default_input_values = [0, Vector2(0, 0)]
op_type = 0
function = 26

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1knoh"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_2gy10"]
default_input_values = [0, 0.0, 1, -0.3]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_g4h48"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 1

[sub_resource type="VisualShaderNodeMultiplyAdd" id="VisualShaderNodeMultiplyAdd_5ugvc"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0.1, 0.1), 2, Vector2(0, 0)]
op_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_e3hm6"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(2, 2)]
op_type = 0
operator = 3

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_t18v6"]
default_input_values = [1, 0.0, 2, 1.0, 3, 0.0, 4, 0.5]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_uajeo"]
constant = Color(0, 1, 1, 1)

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_8wdgc"]
function = 0

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_5h0au"]
default_input_values = [0, 0.0, 1, 0.02, 2, 1.0]

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_glb3l"]
default_input_values = [1, -1.0, 2, 1.0, 3, -1.0, 4, -0.3]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, depth_test_default, cull_disabled, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_19;



void fragment() {
// ColorConstant:4
	vec4 n_out4p0 = vec4(0.000000, 1.000000, 1.000000, 1.000000);


// Input:11
	float n_out11p0 = TIME;


// VectorOp:15
	vec2 n_in15p1 = vec2(0.53300, 0.43300);
	vec2 n_out15p0 = vec2(n_out11p0) * n_in15p1;


// VectorFunc:14
	vec2 n_out14p0 = sin(n_out15p0);


// FloatOp:17
	float n_in17p1 = -0.30000;
	float n_out17p0 = n_out11p0 * n_in17p1;


// VectorOp:16
	vec2 n_out16p0 = n_out14p0 + vec2(n_out17p0);


// Input:20
	vec2 n_out20p0 = UV;


// VectorOp:27
	vec2 n_in27p1 = vec2(2.00000, 2.00000);
	vec2 n_out27p0 = n_out20p0 / n_in27p1;


// MultiplyAdd:12
	vec2 n_in12p1 = vec2(0.10000, 0.10000);
	vec2 n_out12p0 = fma(n_out16p0, n_in12p1, n_out27p0);


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, n_out12p0);


// Input:23
	float n_out23p0 = TIME;


// VectorOp:21
	vec2 n_in21p1 = vec2(0.82400, 0.54000);
	vec2 n_out21p0 = vec2(n_out23p0) * n_in21p1;


// VectorFunc:22
	vec2 n_out22p0 = sin(n_out21p0);


// FloatOp:24
	float n_in24p1 = -0.30000;
	float n_out24p0 = n_out23p0 * n_in24p1;


// VectorOp:25
	vec2 n_out25p0 = n_out22p0 - vec2(n_out24p0);


// MultiplyAdd:26
	vec2 n_in26p1 = vec2(0.10000, 0.10000);
	vec2 n_out26p0 = fma(n_out25p0, n_in26p1, n_out27p0);


// Texture2D:19
	vec4 n_out19p0 = texture(tex_frg_19, n_out26p0);


	vec3 n_out18p0;
// ColorOp:18
	{
		float base = vec3(n_out2p0.xyz).x;
		float blend = vec3(n_out19p0.xyz).x;
		if (base < 0.5) {
			n_out18p0.x = 2.0 * base * blend;
		} else {
			n_out18p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out2p0.xyz).y;
		float blend = vec3(n_out19p0.xyz).y;
		if (base < 0.5) {
			n_out18p0.y = 2.0 * base * blend;
		} else {
			n_out18p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = vec3(n_out2p0.xyz).z;
		float blend = vec3(n_out19p0.xyz).z;
		if (base < 0.5) {
			n_out18p0.z = 2.0 * base * blend;
		} else {
			n_out18p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// FloatFunc:5
	float n_out5p0 = sin(n_out11p0);


	float n_out8p0;
// Remap:8
	float n_in8p1 = -1.00000;
	float n_in8p2 = 1.00000;
	float n_in8p3 = -1.00000;
	float n_in8p4 = -0.30000;
	{
		float __input_range = n_in8p2 - n_in8p1;
		float __output_range = n_in8p4 - n_in8p3;
		n_out8p0 = n_in8p3 + __output_range * ((n_out5p0 - n_in8p1) / __input_range);
	}


	float n_out3p0;
// Remap:3
	float n_in3p1 = 0.00000;
	float n_in3p2 = 1.00000;
	float n_in3p4 = 0.50000;
	{
		float __input_range = n_in3p2 - n_in3p1;
		float __output_range = n_in3p4 - n_out8p0;
		n_out3p0 = n_out8p0 + __output_range * ((n_out18p0.x - n_in3p1) / __input_range);
	}


// Clamp:7
	float n_in7p1 = 0.02000;
	float n_in7p2 = 1.00000;
	float n_out7p0 = clamp(n_out3p0, n_in7p1, n_in7p2);


// Output:0
	ALBEDO = vec3(n_out4p0.xyz);
	ALPHA = n_out7p0;
	EMISSION = vec3(n_out4p0.xyz);


}
"
modes/cull = 2
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_3po8o")
nodes/fragment/2/position = Vector2(-840, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeRemap_t18v6")
nodes/fragment/3/position = Vector2(-140, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeColorConstant_uajeo")
nodes/fragment/4/position = Vector2(-60, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatFunc_8wdgc")
nodes/fragment/5/position = Vector2(-640, 460)
nodes/fragment/7/node = SubResource("VisualShaderNodeClamp_5h0au")
nodes/fragment/7/position = Vector2(140, 360)
nodes/fragment/8/node = SubResource("VisualShaderNodeRemap_glb3l")
nodes/fragment/8/position = Vector2(-400, 520)
nodes/fragment/11/node = SubResource("VisualShaderNodeInput_0ivc4")
nodes/fragment/11/position = Vector2(-2060, 660)
nodes/fragment/12/node = SubResource("VisualShaderNodeMultiplyAdd_ce3b3")
nodes/fragment/12/position = Vector2(-1120, 260)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorFunc_o8ygn")
nodes/fragment/14/position = Vector2(-1558.2952, 301.47168)
nodes/fragment/15/node = SubResource("VisualShaderNodeVectorOp_resmg")
nodes/fragment/15/position = Vector2(-1800, 280)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_auy42")
nodes/fragment/16/position = Vector2(-1360, 400)
nodes/fragment/17/node = SubResource("VisualShaderNodeFloatOp_sddo7")
nodes/fragment/17/position = Vector2(-1640, 480)
nodes/fragment/18/node = SubResource("VisualShaderNodeColorOp_n7syd")
nodes/fragment/18/position = Vector2(-400, 120)
nodes/fragment/19/node = SubResource("VisualShaderNodeTexture_dq5hw")
nodes/fragment/19/position = Vector2(-860, -240)
nodes/fragment/20/node = SubResource("VisualShaderNodeInput_84rs3")
nodes/fragment/20/position = Vector2(-1840, -440)
nodes/fragment/21/node = SubResource("VisualShaderNodeVectorOp_fpvg5")
nodes/fragment/21/position = Vector2(-1900, -260)
nodes/fragment/22/node = SubResource("VisualShaderNodeVectorFunc_ju1iq")
nodes/fragment/22/position = Vector2(-1660, -240)
nodes/fragment/23/node = SubResource("VisualShaderNodeInput_1knoh")
nodes/fragment/23/position = Vector2(-2160, 120)
nodes/fragment/24/node = SubResource("VisualShaderNodeFloatOp_2gy10")
nodes/fragment/24/position = Vector2(-1740, -60)
nodes/fragment/25/node = SubResource("VisualShaderNodeVectorOp_g4h48")
nodes/fragment/25/position = Vector2(-1460, -140)
nodes/fragment/26/node = SubResource("VisualShaderNodeMultiplyAdd_5ugvc")
nodes/fragment/26/position = Vector2(-1220, -280)
nodes/fragment/27/node = SubResource("VisualShaderNodeVectorOp_e3hm6")
nodes/fragment/27/position = Vector2(-1440, -500)
nodes/fragment/connections = PackedInt32Array(4, 0, 0, 0, 4, 0, 0, 5, 3, 0, 7, 0, 7, 0, 0, 1, 5, 0, 8, 0, 8, 0, 3, 3, 12, 0, 2, 0, 11, 0, 5, 0, 11, 0, 15, 0, 15, 0, 14, 0, 14, 0, 16, 0, 16, 0, 12, 0, 11, 0, 17, 0, 17, 0, 16, 1, 2, 0, 18, 0, 19, 0, 18, 1, 18, 0, 3, 0, 23, 0, 21, 0, 21, 0, 22, 0, 22, 0, 25, 0, 25, 0, 26, 0, 23, 0, 24, 0, 24, 0, 25, 1, 26, 0, 19, 0, 20, 0, 27, 0, 27, 0, 26, 2, 27, 0, 12, 2)
